<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
 <mapper namespace="review">
 	
 	
 	<!-- 이건 지난 예약 -->
 	<select id="selectList" parameterType="Review" resultType="Review">
 		<![CDATA[
 		SELECT 
    		locations.address, 
    		locations.address_detail, 
    		locations.dog_facilities, 
    		reservations.reservation_date, 
    		reservations.reservation_start_time, 
    		reservations.reservation_end_time, 
    		reservations.customer_count,
    		reservations.price,
			reservations.dog_id as dog_id,
			reservations.id as reservation_id,
			members.id as id,
            (select name from dogs where dogs.id=dog_id) as dog_name,
    		reviews.id as review_id
		FROM 
   		 	members
	JOIN 
    	reservations ON members.id = reservations.member_id
	JOIN 
    	locations ON reservations.location_id = locations.id
	JOIN 
    	dogs ON dogs.id = reservations.dog_id
    JOIN
    	reviews on reservations.id=reviews.reservation_id
    WHERE members.id = #{id} and TO_DATE(TO_CHAR(reservations.reservation_date, 'YYYY-MM-DD') || ' ' || reservations.reservation_end_time, 'YYYY-MM-DD HH24:MI') <= sysdate
 		order by reservation_date
 		]]>
 	</select>
 	
 	
 	<!-- 리뷰 숫자 -->
 	<select id="cnt" parameterType="Review" resultType="int">
 		<![CDATA[
 		SELECT 
    		count (*)
		FROM 
   		 	members
	JOIN 
    	reservations ON members.id = reservations.member_id
	JOIN 
    	locations ON reservations.location_id = locations.id
	JOIN 
    	dogs ON dogs.id = reservations.dog_id
    JOIN
    	reviews on reservations.id=reviews.reservation_id
    	WHERE 
    	members.id = #{id} and TO_DATE(TO_CHAR(reservations.reservation_date, 'YYYY-MM-DD') || ' ' || reservations.reservation_end_time, 'YYYY-MM-DD HH24:MI') <= sysdate
 		]]>
 	</select>
 	
 	<!-- 리뷰작성값 넣기 -->
 	<insert id="write" parameterType="ReviewWrite">
 		<![CDATA[
 			INSERT INTO reviews (id , user_contents, rate, service_bt, space_bt, clean_bt, revisit_bt, admin_contents, reservation_id ,created_time)
			VALUES 
			(reviews_id_seq.NEXTVAL, #{userContents}, #{rate}, #{serviceBt}, #{spaceBt}, #{cleanBt}, #{revisitBt}, #{adminContents}, #{reservationId}, sysdate)
 		]]>
 	</insert>
 	
 	<!-- 위에 리뷰작성값에서 reviews_id빼기 -->
 	<select id="select" parameterType="ReviewWrite" resultType="int">
 		<![CDATA[
 			select id from reviews where reservation_id=#{reservationId}
 		]]>
 	</select>
 	
 	<!-- 이미지 넣는 곳 -->
 	<insert id="imginsert" parameterType="ReviewWrite">
 		<![CDATA[
 			INSERT INTO review_imgs (uuid, uploadpath, filename, review_id)
			VALUES (#{uuid}, #{uploadpath}, #{filename}, #{reviewId})
 		]]>
 	</insert>
 	
 	<!-- 위에 리뷰작성값에서 reviews_id빼기 -->
 	<select id="detail" parameterType="ReviewWrite" resultType="ReviewWrite">
 		<![CDATA[
 			select * from reviews where reservation_id=#{reservationId}
 		]]>
 	</select>
 	
 	<!-- 이미지 정보가져오는 곳 -->
 	<select id="imgdetail" parameterType="ReviewWrite" resultType="ReviewWrite">
 		<![CDATA[
 			select * from review_imgs where review_id=#{reviewId}
 		]]>
 	</select>
 	
 	<!-- 리뷰에서 위치 정보 가져오는 곳 -->
 	<select id="selectlocation" parameterType="Location" resultType="Location">
 		<![CDATA[
 			select 
 				locations.address,
 				locations.address_detail,
 				locations.dog_facilities,
 				reservations.reservation_date,
                reservations.reservation_start_time,
                reservations.reservation_end_time
 			from reservations
				join locations on locations.id=reservations.location_id
				join reviews on reviews.reservation_id=reservations.id
			where reservations.id=#{reservationId}
 		]]>
 	</select>
 	<!-- 리뷰 update하는 곳 -->
 	<update id="update" parameterType="ReviewWrite">
 		<![CDATA[
 			update reviews
			set
			created_time = sysdate,
			user_contents = #{userContents},
			rate = #{rate},
			service_bt = #{serviceBt},
			space_bt = #{spaceBt},
			clean_bt = #{cleanBt},
			revisit_bt = #{revisitBt}
			where id = #{reviewId}
 		]]>
 	</update>
 	
 	<!-- 이미지 삭제하는 곳 -->
 	<delete id="imgdelete">
 		<![CDATA[
 			DELETE FROM review_imgs 
 			WHERE review_id = #{reviewId}
 		]]>
 	</delete>
 	
 	<!-- 이미지 갱신하는 곳 -->
 	<update id="imgupdate" parameterType="ReviewWrite">
 		<![CDATA[
 			update review_imgs
			set
			uuid = #{uuid},
			uploadpath = #{uploadpath},
			filename = #{filename}
			where review_id = #{reviewId}
 		]]>
 	</update>
 	
 	<!-- 리뷰 삭제하는 곳 -->
 	<delete id="delete" parameterType="ReviewWrite">
 		<![CDATA[
 			delete from reviews
 			where id=#{reviewId}
 		]]>
 	</delete>
 	
 	
 </mapper>